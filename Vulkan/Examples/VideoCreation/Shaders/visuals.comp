#version 450
layout (local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, rgba8) uniform writeonly image2D destImage;

layout(push_constant) uniform Push {
    float time;
    int width;
    int height;
} push;

float hash(vec2 p) {
    return fract(sin(dot(p, vec2(12.9898,78.233))) * 43758.5453);
}

void main() {
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    if (gid.x >= push.width || gid.y >= push.height) return;

    vec2 uv = vec2(gid) / vec2(push.width, push.height);
    float t = push.time * 0.9;

    float bands = 0.5 + 0.5 * sin(12.0 * uv.x + t + sin(6.0*uv.y + t*0.7));
    float n = hash(uv * 100.0 + t);
    vec3 col = vec3(bands * (0.8 + 0.2*n), 0.4 + 0.6 * uv.y, 0.2 + 0.8*uv.x);

    imageStore(destImage, gid, vec4(col, 1.0));
}

Grammar

    0 $accept: program $end

    1 program: program statement
    2        | ε

    3 statement: expr ';'
    4          | IDENT '=' expr ';'
    5          | PRINT '(' expr ')' ';'
    6          | IF '(' expr ')' block ELSE block
    7          | WHILE '(' expr ')' block
    8          | DEF IDENT '(' param_list ')' block
    9          | RETURN expr ';'

   10 block: '{' program '}'

   11 param_list: param_list ',' IDENT
   12           | IDENT
   13           | ε

   14 expr: NUMBER
   15     | STRING
   16     | IDENT
   17     | expr '+' expr
   18     | expr '-' expr
   19     | expr '*' expr
   20     | expr '/' expr
   21     | expr EQ expr
   22     | expr NEQ expr
   23     | expr '<' expr
   24     | expr '>' expr
   25     | expr LE expr
   26     | expr GE expr
   27     | '-' expr
   28     | IDENT '(' ')'
   29     | IDENT '(' expr_list ')'
   30     | '(' expr ')'

   31 expr_list: expr ',' expr_list
   32          | expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 5 6 7 8 28 29 30
    ')' (41) 5 6 7 8 28 29 30
    '*' (42) 19
    '+' (43) 17
    ',' (44) 11 31
    '-' (45) 18 27
    '/' (47) 20
    ';' (59) 3 4 5 9
    '<' (60) 23
    '=' (61) 4
    '>' (62) 24
    '{' (123) 10
    '}' (125) 10
    error (256)
    NUMBER <num> (258) 14
    IDENT <str> (259) 4 8 11 12 16 28 29
    STRING <str> (260) 15
    IF (261) 6
    ELSE (262) 6
    WHILE (263) 7
    PRINT (264) 5
    DEF (265) 8
    RETURN (266) 9
    EQ (267) 21
    NEQ (268) 22
    LE (269) 25
    GE (270) 26
    UMINUS (271)


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program <stmt> (31)
        on left: 1 2
        on right: 0 1 10
    statement <stmt> (32)
        on left: 3 4 5 6 7 8 9
        on right: 1
    block <stmt> (33)
        on left: 10
        on right: 6 7 8
    param_list <strlist> (34)
        on left: 11 12 13
        on right: 8 11
    expr <expr> (35)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 3 4 5 6 7 9 17 18 19 20 21 22 23 24 25 26 27 30 31 32
    expr_list <expr> (36)
        on left: 31 32
        on right: 29 31


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • statement

    $end    shift, and go to state 2
    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 4
    STRING  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    PRINT   shift, and go to state 8
    DEF     shift, and go to state 9
    RETURN  shift, and go to state 10
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    statement  go to state 13
    expr       go to state 14


State 2

    0 $accept: program $end •

    $default  accept


State 3

   14 expr: NUMBER •

    $default  reduce using rule 14 (expr)


State 4

    4 statement: IDENT • '=' expr ';'
   16 expr: IDENT •
   28     | IDENT • '(' ')'
   29     | IDENT • '(' expr_list ')'

    '='  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 16 (expr)


State 5

   15 expr: STRING •

    $default  reduce using rule 15 (expr)


State 6

    6 statement: IF • '(' expr ')' block ELSE block

    '('  shift, and go to state 17


State 7

    7 statement: WHILE • '(' expr ')' block

    '('  shift, and go to state 18


State 8

    5 statement: PRINT • '(' expr ')' ';'

    '('  shift, and go to state 19


State 9

    8 statement: DEF • IDENT '(' param_list ')' block

    IDENT  shift, and go to state 20


State 10

    9 statement: RETURN • expr ';'

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 22


State 11

   27 expr: '-' • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 23


State 12

   30 expr: '(' • expr ')'

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 24


State 13

    1 program: program statement •

    $default  reduce using rule 1 (program)


State 14

    3 statement: expr • ';'
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ';'  shift, and go to state 35


State 15

    4 statement: IDENT '=' • expr ';'

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 36


State 16

   28 expr: IDENT '(' • ')'
   29     | IDENT '(' • expr_list ')'

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12
    ')'     shift, and go to state 37

    expr       go to state 38
    expr_list  go to state 39


State 17

    6 statement: IF '(' • expr ')' block ELSE block

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 40


State 18

    7 statement: WHILE '(' • expr ')' block

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 41


State 19

    5 statement: PRINT '(' • expr ')' ';'

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 42


State 20

    8 statement: DEF IDENT • '(' param_list ')' block

    '('  shift, and go to state 43


State 21

   16 expr: IDENT •
   28     | IDENT • '(' ')'
   29     | IDENT • '(' expr_list ')'

    '('  shift, and go to state 16

    $default  reduce using rule 16 (expr)


State 22

    9 statement: RETURN expr • ';'
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ';'  shift, and go to state 44


State 23

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr
   27     | '-' expr •

    $default  reduce using rule 27 (expr)


State 24

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr
   30     | '(' expr • ')'

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ')'  shift, and go to state 45


State 25

   21 expr: expr EQ • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 46


State 26

   22 expr: expr NEQ • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 47


State 27

   25 expr: expr LE • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 48


State 28

   26 expr: expr GE • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 49


State 29

   23 expr: expr '<' • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 50


State 30

   24 expr: expr '>' • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 51


State 31

   17 expr: expr '+' • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 52


State 32

   18 expr: expr '-' • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 53


State 33

   19 expr: expr '*' • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 54


State 34

   20 expr: expr '/' • expr

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 55


State 35

    3 statement: expr ';' •

    $default  reduce using rule 3 (statement)


State 36

    4 statement: IDENT '=' expr • ';'
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ';'  shift, and go to state 56


State 37

   28 expr: IDENT '(' ')' •

    $default  reduce using rule 28 (expr)


State 38

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr
   31 expr_list: expr • ',' expr_list
   32          | expr •

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ','  shift, and go to state 57

    $default  reduce using rule 32 (expr_list)


State 39

   29 expr: IDENT '(' expr_list • ')'

    ')'  shift, and go to state 58


State 40

    6 statement: IF '(' expr • ')' block ELSE block
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ')'  shift, and go to state 59


State 41

    7 statement: WHILE '(' expr • ')' block
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ')'  shift, and go to state 60


State 42

    5 statement: PRINT '(' expr • ')' ';'
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    EQ   shift, and go to state 25
    NEQ  shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ')'  shift, and go to state 61


State 43

    8 statement: DEF IDENT '(' • param_list ')' block

    IDENT  shift, and go to state 62

    $default  reduce using rule 13 (param_list)

    param_list  go to state 63


State 44

    9 statement: RETURN expr ';' •

    $default  reduce using rule 9 (statement)


State 45

   30 expr: '(' expr ')' •

    $default  reduce using rule 30 (expr)


State 46

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   21     | expr EQ expr •
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 21 (expr)


State 47

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   22     | expr NEQ expr •
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '<'  shift, and go to state 29
    '>'  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 22 (expr)


State 48

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   25     | expr LE expr •
   26     | expr • GE expr

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 25 (expr)


State 49

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr
   26     | expr GE expr •

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 26 (expr)


State 50

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   23     | expr '<' expr •
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 23 (expr)


State 51

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   24     | expr '>' expr •
   25     | expr • LE expr
   26     | expr • GE expr

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 24 (expr)


State 52

   17 expr: expr • '+' expr
   17     | expr '+' expr •
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 17 (expr)


State 53

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   18     | expr '-' expr •
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 18 (expr)


State 54

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   19     | expr '*' expr •
   20     | expr • '/' expr
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    $default  reduce using rule 19 (expr)


State 55

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   20     | expr '/' expr •
   21     | expr • EQ expr
   22     | expr • NEQ expr
   23     | expr • '<' expr
   24     | expr • '>' expr
   25     | expr • LE expr
   26     | expr • GE expr

    $default  reduce using rule 20 (expr)


State 56

    4 statement: IDENT '=' expr ';' •

    $default  reduce using rule 4 (statement)


State 57

   31 expr_list: expr ',' • expr_list

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 21
    STRING  shift, and go to state 5
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr       go to state 38
    expr_list  go to state 64


State 58

   29 expr: IDENT '(' expr_list ')' •

    $default  reduce using rule 29 (expr)


State 59

    6 statement: IF '(' expr ')' • block ELSE block

    '{'  shift, and go to state 65

    block  go to state 66


State 60

    7 statement: WHILE '(' expr ')' • block

    '{'  shift, and go to state 65

    block  go to state 67


State 61

    5 statement: PRINT '(' expr ')' • ';'

    ';'  shift, and go to state 68


State 62

   12 param_list: IDENT •

    $default  reduce using rule 12 (param_list)


State 63

    8 statement: DEF IDENT '(' param_list • ')' block
   11 param_list: param_list • ',' IDENT

    ')'  shift, and go to state 69
    ','  shift, and go to state 70


State 64

   31 expr_list: expr ',' expr_list •

    $default  reduce using rule 31 (expr_list)


State 65

   10 block: '{' • program '}'

    $default  reduce using rule 2 (program)

    program  go to state 71


State 66

    6 statement: IF '(' expr ')' block • ELSE block

    ELSE  shift, and go to state 72


State 67

    7 statement: WHILE '(' expr ')' block •

    $default  reduce using rule 7 (statement)


State 68

    5 statement: PRINT '(' expr ')' ';' •

    $default  reduce using rule 5 (statement)


State 69

    8 statement: DEF IDENT '(' param_list ')' • block

    '{'  shift, and go to state 65

    block  go to state 73


State 70

   11 param_list: param_list ',' • IDENT

    IDENT  shift, and go to state 74


State 71

    1 program: program • statement
   10 block: '{' program • '}'

    NUMBER  shift, and go to state 3
    IDENT   shift, and go to state 4
    STRING  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    PRINT   shift, and go to state 8
    DEF     shift, and go to state 9
    RETURN  shift, and go to state 10
    '-'     shift, and go to state 11
    '('     shift, and go to state 12
    '}'     shift, and go to state 75

    statement  go to state 13
    expr       go to state 14


State 72

    6 statement: IF '(' expr ')' block ELSE • block

    '{'  shift, and go to state 65

    block  go to state 76


State 73

    8 statement: DEF IDENT '(' param_list ')' block •

    $default  reduce using rule 8 (statement)


State 74

   11 param_list: param_list ',' IDENT •

    $default  reduce using rule 11 (param_list)


State 75

   10 block: '{' program '}' •

    $default  reduce using rule 10 (block)


State 76

    6 statement: IF '(' expr ')' block ELSE block •

    $default  reduce using rule 6 (statement)
